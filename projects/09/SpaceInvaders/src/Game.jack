/** Space invader game */

class Game {
    field Canon canon;
    field LaserList lasers;
    field InvaderList invaders;

    constructor Game new() {
        let invaders = null;
        let lasers = null;
        
        let canon = Canon.new();
        return this;
    }

    method void run() {
        var int key;
        var boolean isRunning;

        let isRunning = true;
        do initInvaders();

        while (isRunning) {
            let key = Keyboard.keyPressed();

            if (key = 130) {
                do canon.moveLeft();
            }   

            if (key = 132) {
                do canon.moveRight();
            }

            if (key = 32) {
                do handleCanonShot();
            }

            if (key = 81) {
                let isRunning = false;
            }

            if (key = 131) {
                do advanceLastLaser();
            }
        }
        return;
    }

    method void initInvaders() {
        var int i;
        var int invadersCount;

        var InvaderList invaderList;

        var int x;
        var int y;

        let x = 15;
        let y = 15;

        let i = 0;
        let invadersCount = 4;

        while (i < invadersCount) {
            let invaderList = InvaderList.new(Invader.new(x, y), null);

            if (~(invaders = null)) {
                do invaders.add(invaderList); 
            }
            
            if (invaders = null) {
                let invaders = invaderList;
            }
            
            let x = x + 15;
            let y = y + 15;
            let i = i + 1; 
        }
        return;
    }

    method void handleCanonShot() {
        var Laser laser;
        let laser = canon.shoot();

        if (lasers = null) {
            let lasers = LaserList.new(laser, null);
            return;
        }

        do lasers.add(LaserList.new(laser, null));
        return;
    }
 
    method void advanceLastLaser() {
        var Laser laser;
        var boolean didAdvance;

        if (lasers = null) {
            return;
        }

        let laser = lasers.pop();
        let didAdvance = laser.advance();

        if (~(didAdvance)) {
            do lasers.trim();
        }
        return;
    }

    method void dispose() {
      do Memory.deAlloc(this);
      return;
   }
}