function Game.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 0
pop this 1
call Canon.new 0
pop this 0
push pointer 0
return
function Game.run 2
push argument 0
pop pointer 0
push constant 0
not
pop local 1
push pointer 0
call Game.initInvaders 1
pop temp 0
label WHILE_EXP0
push local 1
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 130
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Canon.moveLeft 1
pop temp 0
label IF_FALSE0
push local 0
push constant 132
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Canon.moveRight 1
pop temp 0
label IF_FALSE1
push local 0
push constant 32
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Game.handleCanonShot 1
pop temp 0
label IF_FALSE2
push local 0
push constant 81
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 1
label IF_FALSE3
push local 0
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Game.advanceLastLaser 1
pop temp 0
label IF_FALSE4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.initInvaders 5
push argument 0
pop pointer 0
push constant 15
pop local 3
push constant 15
pop local 4
push constant 0
pop local 0
push constant 4
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 3
push local 4
call Invader.new 2
push constant 0
call InvaderList.new 2
pop local 2
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push local 2
call InvaderList.add 2
pop temp 0
label IF_FALSE0
push this 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
pop this 2
label IF_FALSE1
push local 3
push constant 15
add
pop local 3
push local 4
push constant 15
add
pop local 4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.handleCanonShot 1
push argument 0
pop pointer 0
push this 0
call Canon.shoot 1
pop local 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 0
call LaserList.new 2
pop this 1
push constant 0
return
label IF_FALSE0
push this 1
push local 0
push constant 0
call LaserList.new 2
call LaserList.add 2
pop temp 0
push constant 0
return
function Game.advanceLastLaser 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
call LaserList.pop 1
pop local 0
push local 0
call Laser.advance 1
pop local 1
push local 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call LaserList.trim 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
